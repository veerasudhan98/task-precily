{"ast":null,"code":"import { FETCH_CONTENT, FETCH_CONTENT_SUCCESS, FETCH_CONTENT_FAILED, OPEN_MODAL, CLOSE_MODAL, UPDATE_CONTENT, UPDATE_CONTENT_SUCCESS, UPDATE_CONTENT_FAILED } from \"../action/type\";\nconst initialState = {\n  list: [],\n  modal: false,\n  loading: false,\n  selected: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CONTENT:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case FETCH_CONTENT_SUCCESS:\n      {\n        return { ...state,\n          list: [...action.payload],\n          loading: false\n        };\n      }\n\n    case FETCH_CONTENT_FAILED:\n      {\n        return { ...state,\n          loading: false\n        };\n      }\n\n    case OPEN_MODAL:\n      {\n        console.log(action.payload);\n        return { ...state,\n          modal: true,\n          selected: action.payload\n        };\n      }\n\n    case CLOSE_MODAL:\n      {\n        return { ...state,\n          modal: false,\n          selected: {}\n        };\n      }\n\n    case UPDATE_CONTENT:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case UPDATE_CONTENT_SUCCESS:\n      {\n        console.log(action.payload);\n        return { ...state,\n          list: state.list.map(item => {\n            if (item._id === action.payload.id) {\n              return action.payload.data;\n            }\n\n            return item;\n          }),\n          loading: false\n        };\n      }\n\n    case UPDATE_CONTENT_FAILED:\n      {\n        return { ...state,\n          loading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/veerasudhan/Projects/test-project/task-app-precily/client/src/redux/reducer/index.js"],"names":["FETCH_CONTENT","FETCH_CONTENT_SUCCESS","FETCH_CONTENT_FAILED","OPEN_MODAL","CLOSE_MODAL","UPDATE_CONTENT","UPDATE_CONTENT_SUCCESS","UPDATE_CONTENT_FAILED","initialState","list","modal","loading","selected","state","action","type","payload","console","log","map","item","_id","id","data"],"mappings":"AAAA,SACEA,aADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,UAJF,EAKEC,WALF,EAMEC,cANF,EAOEC,sBAPF,EAQEC,qBARF,QASO,gBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,KAAK,EAAE,KAFY;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,aAAL;AAAoB;AAClB,eAAO,EACL,GAAGa,KADE;AAELF,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AACD,SAAKV,qBAAL;AAA4B;AAC1B,eAAO,EACL,GAAGY,KADE;AAELJ,UAAAA,IAAI,EAAE,CAAC,GAAGK,MAAM,CAACE,OAAX,CAFD;AAGLL,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AACD,SAAKT,oBAAL;AAA2B;AACzB,eAAO,EACL,GAAGW,KADE;AAELF,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AACD,SAAKR,UAAL;AAAiB;AACfc,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,KAAK,EAAE,IAFF;AAGLE,UAAAA,QAAQ,EAAEE,MAAM,CAACE;AAHZ,SAAP;AAKD;;AACD,SAAKZ,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGS,KADE;AAELH,UAAAA,KAAK,EAAE,KAFF;AAGLE,UAAAA,QAAQ,EAAE;AAHL,SAAP;AAKD;;AACD,SAAKP,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGQ,KADE;AAELF,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AACD,SAAKL,sBAAL;AAA6B;AAC3BW,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,OAAnB;AACA,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWU,GAAX,CAAgBC,IAAD,IAAU;AAC7B,gBAAIA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACE,OAAP,CAAeM,EAAhC,EAAoC;AAClC,qBAAOR,MAAM,CAACE,OAAP,CAAeO,IAAtB;AACD;;AACD,mBAAOH,IAAP;AACD,WALK,CAFD;AAQLT,UAAAA,OAAO,EAAE;AARJ,SAAP;AAUD;;AACD,SAAKJ,qBAAL;AAA4B;AAC1B,eAAO,EACL,GAAGM,KADE;AAELF,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AACD;AACE,aAAOE,KAAP;AA7DJ;AA+DD","sourcesContent":["import {\n  FETCH_CONTENT,\n  FETCH_CONTENT_SUCCESS,\n  FETCH_CONTENT_FAILED,\n  OPEN_MODAL,\n  CLOSE_MODAL,\n  UPDATE_CONTENT,\n  UPDATE_CONTENT_SUCCESS,\n  UPDATE_CONTENT_FAILED,\n} from \"../action/type\";\n\nconst initialState = {\n  list: [],\n  modal: false,\n  loading: false,\n  selected: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CONTENT: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case FETCH_CONTENT_SUCCESS: {\n      return {\n        ...state,\n        list: [...action.payload],\n        loading: false,\n      };\n    }\n    case FETCH_CONTENT_FAILED: {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    case OPEN_MODAL: {\n      console.log(action.payload);\n      return {\n        ...state,\n        modal: true,\n        selected: action.payload,\n      };\n    }\n    case CLOSE_MODAL: {\n      return {\n        ...state,\n        modal: false,\n        selected: {},\n      };\n    }\n    case UPDATE_CONTENT: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case UPDATE_CONTENT_SUCCESS: {\n      console.log(action.payload);\n      return {\n        ...state,\n        list: state.list.map((item) => {\n          if (item._id === action.payload.id) {\n            return action.payload.data;\n          }\n          return item;\n        }),\n        loading: false,\n      };\n    }\n    case UPDATE_CONTENT_FAILED: {\n      return {\n        ...state,\n        loading: false,\n      };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}