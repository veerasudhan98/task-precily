{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDraggable = require(\"react-draggable\");\n\nvar _utils = require(\"./utils\");\n\nvar _propTypes = require(\"./propTypes\");\n\nvar _excluded = [\"children\", \"className\", \"draggableOpts\", \"width\", \"height\", \"handle\", \"handleSize\", \"lockAspectRatio\", \"axis\", \"minConstraints\", \"maxConstraints\", \"onResize\", \"onResizeStop\", \"onResizeStart\", \"resizeHandles\", \"transformScale\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n} // The base <Resizable> component.\n// This component does not have state and relies on the parent to set its props based on callback data.\n\n\nvar Resizable = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Resizable, _React$Component);\n\n  function Resizable() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.handleRefs = {};\n    _this.lastHandleRect = null;\n    _this.slack = null;\n    return _this;\n  }\n\n  var _proto = Resizable.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.resetData();\n  };\n\n  _proto.lockAspectRatio = function lockAspectRatio(width, height, aspectRatio) {\n    height = width / aspectRatio;\n    width = height * aspectRatio;\n    return [width, height];\n  };\n\n  _proto.resetData = function resetData() {\n    this.lastHandleRect = this.slack = null;\n  } // Clamp width and height within provided constraints\n  ;\n\n  _proto.runConstraints = function runConstraints(width, height) {\n    var _ref = [this.props.minConstraints, this.props.maxConstraints],\n        min = _ref[0],\n        max = _ref[1];\n    if (!min && !max) return [width, height]; // If constraining to min and max, we need to also fit width and height to aspect ratio.\n\n    if (this.props.lockAspectRatio) {\n      var resizingHorizontally = height === this.props.height;\n\n      if (resizingHorizontally) {\n        var ratio = this.props.width / this.props.height;\n        height = width / ratio;\n        width = height * ratio;\n      } else {\n        // Take into account vertical resize with N/S handles on locked aspect\n        // ratio. Calculate the change height-first, instead of width-first\n        var _ratio = this.props.height / this.props.width;\n\n        width = height / _ratio;\n        height = width * _ratio;\n      }\n    }\n\n    var oldW = width,\n        oldH = height; // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _ref2 = this.slack || [0, 0],\n        slackW = _ref2[0],\n        slackH = _ref2[1];\n\n    width += slackW;\n    height += slackH;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    } // If the width or height changed, we must have introduced some slack. Record it for the next iteration.\n\n\n    this.slack = [slackW + (oldW - width), slackH + (oldH - height)];\n    return [width, height];\n  }\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n\n    return function (e, _ref3) {\n      var node = _ref3.node,\n          deltaX = _ref3.deltaX,\n          deltaY = _ref3.deltaY; // Reset data in case it was left over somehow (should not be possible)\n\n      if (handlerName === 'onResizeStart') _this2.resetData(); // Axis restrictions\n\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && axis !== 'n' && axis !== 's';\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && axis !== 'e' && axis !== 'w'; // No dragging possible.\n\n      if (!canDragX && !canDragY) return; // Decompose axis for later use\n\n      var axisV = axis[0];\n      var axisH = axis[axis.length - 1]; // intentionally not axis[1], so that this catches axis === 'w' for example\n      // Track the element being dragged to account for changes in position.\n      // If a handle's position is changed between callbacks, we need to factor this in to the next callback.\n      // Failure to do so will cause the element to \"skip\" when resized upwards or leftwards.\n\n      var handleRect = node.getBoundingClientRect();\n\n      if (_this2.lastHandleRect != null) {\n        // If the handle has repositioned on either axis since last render,\n        // we need to increase our callback values by this much.\n        // Only checking 'n', 'w' since resizing by 's', 'w' won't affect the overall position on page,\n        if (axisH === 'w') {\n          var deltaLeftSinceLast = handleRect.left - _this2.lastHandleRect.left;\n          deltaX += deltaLeftSinceLast;\n        }\n\n        if (axisV === 'n') {\n          var deltaTopSinceLast = handleRect.top - _this2.lastHandleRect.top;\n          deltaY += deltaTopSinceLast;\n        }\n      } // Storage of last rect so we know how much it has really moved.\n\n\n      _this2.lastHandleRect = handleRect; // Reverse delta if using top or left drag handles.\n\n      if (axisH === 'w') deltaX = -deltaX;\n      if (axisV === 'n') deltaY = -deltaY; // Update w/h by the deltas. Also factor in transformScale.\n\n      var width = _this2.props.width + (canDragX ? deltaX / _this2.props.transformScale : 0);\n      var height = _this2.props.height + (canDragY ? deltaY / _this2.props.transformScale : 0); // Run user-provided constraints.\n\n      var _this2$runConstraints = _this2.runConstraints(width, height);\n\n      width = _this2$runConstraints[0];\n      height = _this2$runConstraints[1];\n      var dimensionsChanged = width !== _this2.props.width || height !== _this2.props.height; // Call user-supplied callback if present.\n\n      var cb = typeof _this2.props[handlerName] === 'function' ? _this2.props[handlerName] : null; // Don't call 'onResize' if dimensions haven't changed.\n\n      var shouldSkipCb = handlerName === 'onResize' && !dimensionsChanged;\n\n      if (cb && !shouldSkipCb) {\n        if (typeof e.persist === 'function') e.persist();\n        cb(e, {\n          node: node,\n          size: {\n            width: width,\n            height: height\n          },\n          handle: axis\n        });\n      } // Reset internal data\n\n\n      if (handlerName === 'onResizeStop') _this2.resetData();\n    };\n  } // Render a resize handle given an axis & DOM ref.\n  ;\n\n  _proto.renderResizeHandle = function renderResizeHandle(handleAxis, ref) {\n    var handle = this.props.handle;\n\n    if (handle) {\n      if (typeof handle === 'function') {\n        return handle(handleAxis, ref);\n      }\n\n      return /*#__PURE__*/React.cloneElement(handle, {\n        ref: ref,\n        handleAxis: handleAxis\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"react-resizable-handle react-resizable-handle-\" + handleAxis,\n      ref: ref\n    });\n  };\n\n  _proto.render = function render() {\n    var _this3 = this; // Pass along only props not meant for the `<Resizable>`.`\n    // eslint-disable-next-line no-unused-vars\n\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        draggableOpts = _this$props.draggableOpts,\n        width = _this$props.width,\n        height = _this$props.height,\n        handle = _this$props.handle,\n        handleSize = _this$props.handleSize,\n        lockAspectRatio = _this$props.lockAspectRatio,\n        axis = _this$props.axis,\n        minConstraints = _this$props.minConstraints,\n        maxConstraints = _this$props.maxConstraints,\n        onResize = _this$props.onResize,\n        onResizeStop = _this$props.onResizeStop,\n        onResizeStart = _this$props.onResizeStart,\n        resizeHandles = _this$props.resizeHandles,\n        transformScale = _this$props.transformScale,\n        p = _objectWithoutPropertiesLoose(_this$props, _excluded); // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // One or more draggable handles.\n\n\n    return (0, _utils.cloneElement)(children, _objectSpread(_objectSpread({}, p), {}, {\n      className: (className ? className + \" \" : '') + \"react-resizable\",\n      children: [].concat(children.props.children, resizeHandles.map(function (handleAxis) {\n        var _this3$handleRefs$han; // Create a ref to the handle so that `<DraggableCore>` doesn't have to use ReactDOM.findDOMNode().\n\n\n        var ref = (_this3$handleRefs$han = _this3.handleRefs[handleAxis]) != null ? _this3$handleRefs$han : _this3.handleRefs[handleAxis] = /*#__PURE__*/React.createRef();\n        return /*#__PURE__*/React.createElement(_reactDraggable.DraggableCore, _extends({}, draggableOpts, {\n          nodeRef: ref,\n          key: \"resizableHandle-\" + handleAxis,\n          onStop: _this3.resizeHandler('onResizeStop', handleAxis),\n          onStart: _this3.resizeHandler('onResizeStart', handleAxis),\n          onDrag: _this3.resizeHandler('onResize', handleAxis)\n        }), _this3.renderResizeHandle(handleAxis, ref));\n      }))\n    }));\n  };\n\n  return Resizable;\n}(React.Component);\n\nexports.default = Resizable;\nResizable.propTypes = _propTypes.resizableProps;\nResizable.defaultProps = {\n  axis: 'both',\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se'],\n  transformScale: 1\n};","map":{"version":3,"sources":["/Users/veerasudhan/Projects/test-project/client/node_modules/react-resizable/build/Resizable.js"],"names":["exports","__esModule","default","React","_interopRequireWildcard","require","_reactDraggable","_utils","_propTypes","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","target","i","arguments","length","source","apply","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","configurable","writable","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_inheritsLoose","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","Resizable","_React$Component","_this","_len","args","Array","_key","concat","handleRefs","lastHandleRect","slack","_proto","componentWillUnmount","resetData","lockAspectRatio","width","height","aspectRatio","runConstraints","_ref","props","minConstraints","maxConstraints","min","max","resizingHorizontally","ratio","_ratio","oldW","oldH","_ref2","slackW","slackH","Math","resizeHandler","handlerName","axis","_this2","e","_ref3","node","deltaX","deltaY","canDragX","canDragY","axisV","axisH","handleRect","getBoundingClientRect","deltaLeftSinceLast","left","deltaTopSinceLast","top","transformScale","_this2$runConstraints","dimensionsChanged","cb","shouldSkipCb","persist","size","handle","renderResizeHandle","handleAxis","ref","cloneElement","createElement","className","render","_this3","_this$props","children","draggableOpts","handleSize","onResize","onResizeStop","onResizeStart","resizeHandles","map","_this3$handleRefs$han","createRef","DraggableCore","nodeRef","onStop","onStart","onDrag","Component","propTypes","resizableProps","defaultProps","Infinity"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDraggable = require(\"react-draggable\");\n\nvar _utils = require(\"./utils\");\n\nvar _propTypes = require(\"./propTypes\");\n\nvar _excluded = [\"children\", \"className\", \"draggableOpts\", \"width\", \"height\", \"handle\", \"handleSize\", \"lockAspectRatio\", \"axis\", \"minConstraints\", \"maxConstraints\", \"onResize\", \"onResizeStop\", \"onResizeStart\", \"resizeHandles\", \"transformScale\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// The base <Resizable> component.\n// This component does not have state and relies on the parent to set its props based on callback data.\nvar Resizable = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Resizable, _React$Component);\n\n  function Resizable() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.handleRefs = {};\n    _this.lastHandleRect = null;\n    _this.slack = null;\n    return _this;\n  }\n\n  var _proto = Resizable.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.resetData();\n  };\n\n  _proto.lockAspectRatio = function lockAspectRatio(width, height, aspectRatio) {\n    height = width / aspectRatio;\n    width = height * aspectRatio;\n    return [width, height];\n  };\n\n  _proto.resetData = function resetData() {\n    this.lastHandleRect = this.slack = null;\n  } // Clamp width and height within provided constraints\n  ;\n\n  _proto.runConstraints = function runConstraints(width, height) {\n    var _ref = [this.props.minConstraints, this.props.maxConstraints],\n        min = _ref[0],\n        max = _ref[1];\n    if (!min && !max) return [width, height]; // If constraining to min and max, we need to also fit width and height to aspect ratio.\n\n    if (this.props.lockAspectRatio) {\n      var resizingHorizontally = height === this.props.height;\n\n      if (resizingHorizontally) {\n        var ratio = this.props.width / this.props.height;\n        height = width / ratio;\n        width = height * ratio;\n      } else {\n        // Take into account vertical resize with N/S handles on locked aspect\n        // ratio. Calculate the change height-first, instead of width-first\n        var _ratio = this.props.height / this.props.width;\n\n        width = height / _ratio;\n        height = width * _ratio;\n      }\n    }\n\n    var oldW = width,\n        oldH = height; // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _ref2 = this.slack || [0, 0],\n        slackW = _ref2[0],\n        slackH = _ref2[1];\n\n    width += slackW;\n    height += slackH;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    } // If the width or height changed, we must have introduced some slack. Record it for the next iteration.\n\n\n    this.slack = [slackW + (oldW - width), slackH + (oldH - height)];\n    return [width, height];\n  }\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n\n    return function (e, _ref3) {\n      var node = _ref3.node,\n          deltaX = _ref3.deltaX,\n          deltaY = _ref3.deltaY;\n      // Reset data in case it was left over somehow (should not be possible)\n      if (handlerName === 'onResizeStart') _this2.resetData(); // Axis restrictions\n\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && axis !== 'n' && axis !== 's';\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && axis !== 'e' && axis !== 'w'; // No dragging possible.\n\n      if (!canDragX && !canDragY) return; // Decompose axis for later use\n\n      var axisV = axis[0];\n      var axisH = axis[axis.length - 1]; // intentionally not axis[1], so that this catches axis === 'w' for example\n      // Track the element being dragged to account for changes in position.\n      // If a handle's position is changed between callbacks, we need to factor this in to the next callback.\n      // Failure to do so will cause the element to \"skip\" when resized upwards or leftwards.\n\n      var handleRect = node.getBoundingClientRect();\n\n      if (_this2.lastHandleRect != null) {\n        // If the handle has repositioned on either axis since last render,\n        // we need to increase our callback values by this much.\n        // Only checking 'n', 'w' since resizing by 's', 'w' won't affect the overall position on page,\n        if (axisH === 'w') {\n          var deltaLeftSinceLast = handleRect.left - _this2.lastHandleRect.left;\n          deltaX += deltaLeftSinceLast;\n        }\n\n        if (axisV === 'n') {\n          var deltaTopSinceLast = handleRect.top - _this2.lastHandleRect.top;\n          deltaY += deltaTopSinceLast;\n        }\n      } // Storage of last rect so we know how much it has really moved.\n\n\n      _this2.lastHandleRect = handleRect; // Reverse delta if using top or left drag handles.\n\n      if (axisH === 'w') deltaX = -deltaX;\n      if (axisV === 'n') deltaY = -deltaY; // Update w/h by the deltas. Also factor in transformScale.\n\n      var width = _this2.props.width + (canDragX ? deltaX / _this2.props.transformScale : 0);\n      var height = _this2.props.height + (canDragY ? deltaY / _this2.props.transformScale : 0); // Run user-provided constraints.\n\n      var _this2$runConstraints = _this2.runConstraints(width, height);\n\n      width = _this2$runConstraints[0];\n      height = _this2$runConstraints[1];\n      var dimensionsChanged = width !== _this2.props.width || height !== _this2.props.height; // Call user-supplied callback if present.\n\n      var cb = typeof _this2.props[handlerName] === 'function' ? _this2.props[handlerName] : null; // Don't call 'onResize' if dimensions haven't changed.\n\n      var shouldSkipCb = handlerName === 'onResize' && !dimensionsChanged;\n\n      if (cb && !shouldSkipCb) {\n        if (typeof e.persist === 'function') e.persist();\n        cb(e, {\n          node: node,\n          size: {\n            width: width,\n            height: height\n          },\n          handle: axis\n        });\n      } // Reset internal data\n\n\n      if (handlerName === 'onResizeStop') _this2.resetData();\n    };\n  } // Render a resize handle given an axis & DOM ref.\n  ;\n\n  _proto.renderResizeHandle = function renderResizeHandle(handleAxis, ref) {\n    var handle = this.props.handle;\n\n    if (handle) {\n      if (typeof handle === 'function') {\n        return handle(handleAxis, ref);\n      }\n\n      return /*#__PURE__*/React.cloneElement(handle, {\n        ref: ref,\n        handleAxis: handleAxis\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"react-resizable-handle react-resizable-handle-\" + handleAxis,\n      ref: ref\n    });\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    // Pass along only props not meant for the `<Resizable>`.`\n    // eslint-disable-next-line no-unused-vars\n    var _this$props = this.props,\n        children = _this$props.children,\n        className = _this$props.className,\n        draggableOpts = _this$props.draggableOpts,\n        width = _this$props.width,\n        height = _this$props.height,\n        handle = _this$props.handle,\n        handleSize = _this$props.handleSize,\n        lockAspectRatio = _this$props.lockAspectRatio,\n        axis = _this$props.axis,\n        minConstraints = _this$props.minConstraints,\n        maxConstraints = _this$props.maxConstraints,\n        onResize = _this$props.onResize,\n        onResizeStop = _this$props.onResizeStop,\n        onResizeStart = _this$props.onResizeStart,\n        resizeHandles = _this$props.resizeHandles,\n        transformScale = _this$props.transformScale,\n        p = _objectWithoutPropertiesLoose(_this$props, _excluded); // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // One or more draggable handles.\n\n\n    return (0, _utils.cloneElement)(children, _objectSpread(_objectSpread({}, p), {}, {\n      className: (className ? className + \" \" : '') + \"react-resizable\",\n      children: [].concat(children.props.children, resizeHandles.map(function (handleAxis) {\n        var _this3$handleRefs$han;\n\n        // Create a ref to the handle so that `<DraggableCore>` doesn't have to use ReactDOM.findDOMNode().\n        var ref = (_this3$handleRefs$han = _this3.handleRefs[handleAxis]) != null ? _this3$handleRefs$han : _this3.handleRefs[handleAxis] = /*#__PURE__*/React.createRef();\n        return /*#__PURE__*/React.createElement(_reactDraggable.DraggableCore, _extends({}, draggableOpts, {\n          nodeRef: ref,\n          key: \"resizableHandle-\" + handleAxis,\n          onStop: _this3.resizeHandler('onResizeStop', handleAxis),\n          onStart: _this3.resizeHandler('onResizeStart', handleAxis),\n          onDrag: _this3.resizeHandler('onResize', handleAxis)\n        }), _this3.renderResizeHandle(handleAxis, ref));\n      }))\n    }));\n  };\n\n  return Resizable;\n}(React.Component);\n\nexports.default = Resizable;\nResizable.propTypes = _propTypes.resizableProps;\nResizable.defaultProps = {\n  axis: 'both',\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se'],\n  transformScale: 1\n};"]},"metadata":{},"sourceType":"script"}