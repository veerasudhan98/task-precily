{"ast":null,"code":"var _jsxFileName = \"/Users/veerasudhan/Projects/test-project/task-app-precily/client/src/components/Layout.js\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport bgImg from \"../static/372977.jpeg\";\nimport Add from \"./Add\";\nimport { connect } from \"react-redux\"; // import Update from \"./Update\";\n// import { PostContext } from \"../context/postContext\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReactGridLayout = WidthProvider(RGL);\n_c = ReactGridLayout;\n\nclass Layout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const layout = this.generateLayout();\n    this.state = {\n      layout\n    };\n  }\n\n  generateDOM() {\n    //rendering each components from the list\n    // console.log(\"items here\", this.props.items);\n    return this.props.items.map(({\n      title,\n      content,\n      _id\n    }, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-item\",\n      style: {\n        minHeight: \"300px\",\n        minWidth: \"100px\",\n        maxHeight: \"1000px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-component\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-component\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"50%\",\n          src: bgImg,\n          alt: \"sample\",\n          style: {\n            maxWidth: \"300px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-component\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"align-component\",\n        children: /*#__PURE__*/_jsxDEV(Add, {\n          selected: {\n            title,\n            content,\n            _id\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n  }\n\n  generateLayout() {\n    const p = this.props.items; //arrow handlers for resizing\n\n    const availableHandles = [\"s\", \"w\", \"e\", \"n\"];\n    return _.map(new Array(p), function (item, i) {\n      console.log(\"item and i\", p, i);\n      const y = _.result(p, \"y\") || Math.ceil(Math.random() * 4) + 1;\n      return {\n        x: i * 2 % 12,\n        y: Math.floor(i / 6) * y,\n        w: 4,\n        //prev 2\n        h: y,\n        i: i.toString(),\n        resizeHandles: _.shuffle(availableHandles)\n      };\n    });\n  }\n\n  onLayoutChange(layout) {\n    this.props.onLayoutChange(layout);\n  }\n\n  render() {\n    if (this.props.loader) return \"Loading...\";\n    return /*#__PURE__*/_jsxDEV(ReactGridLayout, {\n      layout: this.state.layout,\n      onLayoutChange: this.onLayoutChange,\n      ...this.props,\n      children: this.generateDOM()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLayout.defaultProps = {\n  className: \"layout\",\n  items: 3,\n  rowHeight: 50,\n  onLayoutChange: function () {},\n  cols: 12\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.content.list,\n    loader: state.content.loading\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactGridLayout\");","map":{"version":3,"sources":["/Users/veerasudhan/Projects/test-project/task-app-precily/client/src/components/Layout.js"],"names":["React","_","RGL","WidthProvider","bgImg","Add","connect","ReactGridLayout","Layout","PureComponent","constructor","props","layout","generateLayout","state","generateDOM","items","map","title","content","_id","i","minHeight","minWidth","maxHeight","maxWidth","p","availableHandles","Array","item","console","log","y","result","Math","ceil","random","x","floor","w","h","toString","resizeHandles","shuffle","onLayoutChange","render","loader","defaultProps","className","rowHeight","cols","mapStateToProps","list","loading"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport RGL, { WidthProvider } from \"react-grid-layout\";\nimport bgImg from \"../static/372977.jpeg\";\nimport Add from \"./Add\";\nimport { connect } from \"react-redux\";\n// import Update from \"./Update\";\n// import { PostContext } from \"../context/postContext\";\n\nconst ReactGridLayout = WidthProvider(RGL);\n\nclass Layout extends React.PureComponent {\n  static defaultProps = {\n    className: \"layout\",\n    items: 3,\n    rowHeight: 50,\n    onLayoutChange: function () {},\n    cols: 12,\n  };\n  constructor(props) {\n    super(props);\n    const layout = this.generateLayout();\n    this.state = { layout };\n  }\n\n  generateDOM() {\n    //rendering each components from the list\n    // console.log(\"items here\", this.props.items);\n    return this.props.items.map(({ title, content, _id }, i) => (\n      <div\n        key={i}\n        className=\"grid-item\"\n        style={{ minHeight: \"300px\", minWidth: \"100px\", maxHeight: \"1000px\" }}\n      >\n        <div className=\"align-component\">{title}</div>\n        <div className=\"align-component\">\n          <img\n            width=\"50%\"\n            src={bgImg}\n            alt=\"sample\"\n            style={{ maxWidth: \"300px\" }}\n          />\n        </div>\n        <div className=\"align-component\">{content}</div>\n        <div className=\"align-component\">\n          <Add selected={{ title, content, _id }} />\n        </div>\n      </div>\n    ));\n  }\n\n  generateLayout() {\n    const p = this.props.items;\n    //arrow handlers for resizing\n    const availableHandles = [\"s\", \"w\", \"e\", \"n\"];\n\n    return _.map(new Array(p), function (item, i) {\n      console.log(\"item and i\", p, i);\n      const y = _.result(p, \"y\") || Math.ceil(Math.random() * 4) + 1;\n      return {\n        x: (i * 2) % 12,\n        y: Math.floor(i / 6) * y,\n        w: 4, //prev 2\n        h: y,\n        i: i.toString(),\n        resizeHandles: _.shuffle(availableHandles),\n      };\n    });\n  }\n\n  onLayoutChange(layout) {\n    this.props.onLayoutChange(layout);\n  }\n\n  render() {\n    if (this.props.loader) return \"Loading...\";\n    return (\n      <ReactGridLayout\n        layout={this.state.layout}\n        onLayoutChange={this.onLayoutChange}\n        {...this.props}\n      >\n        {this.generateDOM()}\n      </ReactGridLayout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    items: state.content.list,\n    loader: state.content.loading,\n  };\n};\nexport default connect(mapStateToProps)(Layout);\n"]},"metadata":{},"sourceType":"module"}