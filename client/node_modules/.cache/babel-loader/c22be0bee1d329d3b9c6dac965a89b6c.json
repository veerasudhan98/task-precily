{"ast":null,"code":"var _jsxFileName = \"/Users/veerasudhan/Projects/test-project/task-app-precily/client/src/components/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { handleModal, updateContent } from \"../redux/action\";\nimport { connect } from \"react-redux\";\nimport UpdateButton from \"./UpdateButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction TransitionsModal(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    title,\n    content\n  } = props.selected;\n  const [tempTitle, setTemptitle] = React.useState(title);\n  const [tempContent, setTempContent] = React.useState(content);\n\n  const handleClose = () => {\n    props.handleModal(false, {});\n  };\n\n  const handleSubmit = async () => {\n    console.log(\"after submit\");\n    await props.updateContent({\n      _id: props.id,\n      title: tempTitle,\n      content: tempContent\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      \"aria-labelledby\": \"transition-modal-title\",\n      \"aria-describedby\": \"transition-modal-description\",\n      className: classes.modal,\n      open: props.modalState,\n      onClose: handleClose,\n      closeAfterTransition: true,\n      BackdropComponent: Backdrop,\n      BackdropProps: {\n        timeout: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        in: props.modalState,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          style: {\n            borderColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: `Update - ${title}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            id: \"outlined-basic\",\n            label: \"title\",\n            variant: \"outlined\",\n            autoComplete: \"off\",\n            style: {\n              width: 300,\n              marginTop: \"40px\"\n            },\n            value: tempTitle,\n            onChange: e => {\n              e.preventDefault();\n              setTemptitle(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"text\",\n            id: \"outlined-basic\",\n            label: \"content\",\n            variant: \"outlined\",\n            autoComplete: \"off\",\n            style: {\n              width: 300,\n              marginTop: \"40px\"\n            },\n            value: tempContent,\n            onChange: e => {\n              e.preventDefault();\n              setTempContent(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(UpdateButton, {\n            onSubmit: handleSubmit,\n            type: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransitionsModal, \"xpz2eTay+Tdj6Wb9NXp+meZHllY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TransitionsModal;\n\nconst mapStateToProps = state => {\n  return {\n    modalState: state.content.modal,\n    selected: state.content.selected,\n    id: state.content.selected._id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  handleModal,\n  updateContent\n})(TransitionsModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"TransitionsModal\");","map":{"version":3,"sources":["/Users/veerasudhan/Projects/test-project/task-app-precily/client/src/components/Modal.js"],"names":["React","makeStyles","Modal","Backdrop","Fade","TextField","handleModal","updateContent","connect","UpdateButton","useStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","TransitionsModal","props","classes","title","content","selected","tempTitle","setTemptitle","useState","tempContent","setTempContent","handleClose","handleSubmit","console","log","_id","id","modalState","timeout","borderColor","width","marginTop","e","preventDefault","target","value","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { handleModal, updateContent } from \"../redux/action\";\nimport { connect } from \"react-redux\";\n\nimport UpdateButton from \"./UpdateButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction TransitionsModal(props) {\n  const classes = useStyles();\n  const { title, content } = props.selected;\n\n  const [tempTitle, setTemptitle] = React.useState(title);\n  const [tempContent, setTempContent] = React.useState(content);\n\n  const handleClose = () => {\n    props.handleModal(false, {});\n  };\n  const handleSubmit = async () => {\n    console.log(\"after submit\");\n    await props.updateContent({\n      _id: props.id,\n      title: tempTitle,\n      content: tempContent,\n    });\n  };\n  return (\n    <div>\n      {/* <button type=\"button\" onClick={handleOpen}>\n        react-transition-group\n      </button> */}\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.modalState}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={props.modalState}>\n          <div className={classes.paper} style={{ borderColor: \"white\" }}>\n            <h3>{`Update - ${title}`}</h3>\n            <hr />\n\n            <TextField\n              type=\"text\"\n              id=\"outlined-basic\"\n              label=\"title\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              style={{ width: 300, marginTop: \"40px\" }}\n              value={tempTitle}\n              onChange={(e) => {\n                e.preventDefault();\n                setTemptitle(e.target.value);\n              }}\n            />\n            <br />\n            <TextField\n              type=\"text\"\n              id=\"outlined-basic\"\n              label=\"content\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n              style={{ width: 300, marginTop: \"40px\" }}\n              value={tempContent}\n              onChange={(e) => {\n                e.preventDefault();\n                setTempContent(e.target.value);\n              }}\n            />\n            <UpdateButton onSubmit={handleSubmit} type=\"button\" />\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    modalState: state.content.modal,\n    selected: state.content.selected,\n    id: state.content.selected._id,\n  };\n};\nexport default connect(mapStateToProps, {\n  handleModal,\n  updateContent,\n})(TransitionsModal);\n"]},"metadata":{},"sourceType":"module"}